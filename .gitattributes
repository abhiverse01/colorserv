# Text files

# Normalize JSON files to LF line endings
*.json text eol=lf

# Shell scripts (bash, etc.) should use LF line endings (common on Unix systems)
*.sh text eol=lf

# Windows batch files should use CRLF line endings
*.bat text eol=crlf

# Markdown files should use LF line endings
*.md text eol=lf

# HTML files should use LF line endings
*.html text eol=lf
*.htm text eol=lf

# CSS files should use LF line endings
*.css text eol=lf

# JavaScript and TypeScript files should use LF line endings
*.js text eol=lf
*.ts text eol=lf

# Python files should use LF line endings
*.py text eol=lf

# Ruby files should use LF line endings
*.rb text eol=lf

# XML files should use LF line endings
*.xml text eol=lf

# YAML files should use LF line endings
*.yml text eol=lf
*.yaml text eol=lf

# Dockerfile should use LF line endings
Dockerfile text eol=lf

# Git ignore files should use LF line endings
.gitignore text eol=lf

# Properties files (common in Java projects) should use LF line endings
*.properties text eol=lf

# CSV files should use LF line endings
*.csv text eol=lf

# Miscellaneous text files should use LF line endings
*.txt text eol=lf
*.text text eol=lf
*.log text eol=lf

# Image files - treat as binary (do not apply text normalization)
*.png binary
*.jpg binary
*.jpeg binary
*.gif binary
*.bmp binary
*.tiff binary
*.ico binary
*.svg binary

# Audio files - treat as binary
*.mp3 binary
*.wav binary
*.ogg binary
*.flac binary

# Video files - treat as binary
*.mp4 binary
*.mov binary
*.avi binary
*.mkv binary
*.webm binary

# Font files - treat as binary
*.woff binary
*.woff2 binary
*.ttf binary
*.otf binary

# PDF files - treat as binary
*.pdf binary

# Office documents - treat as binary
*.doc binary
*.docx binary
*.xls binary
*.xlsx binary
*.ppt binary
*.pptx binary

# Archive files - treat as binary
*.zip binary
*.tar binary
*.gz binary
*.bz2 binary
*.7z binary
*.rar binary
*.iso binary

# Executable files - treat as binary
*.exe binary
*.dll binary
*.so binary
*.dylib binary
*.out binary

# Binary files for version control systems
*.git binary

# Java class files - treat as binary
*.class binary

# Object files - treat as binary
*.o binary
*.obj binary

# WebAssembly files - treat as binary
*.wasm binary

# Ignore generated files
*.min.js -text
*.min.css -text
*.map -text

# Ignore Node.js modules (common in JavaScript projects)
node_modules/* linguist-vendored

# Ignore vendor directories in PHP and Go projects
vendor/* linguist-vendored

# Ignore compiled assets in Ruby projects
public/assets/* linguist-vendored

# Ignore dependencies in Rust projects
target/* linguist-vendored

# Ignore build directories in general
build/* linguist-vendored
dist/* linguist-vendored

# Git attributes for diffing and merging

# Treat package-lock.json as binary to prevent unnecessary conflicts
package-lock.json binary

# Handle specific file types with custom merge strategies
# This ensures that .lock files from different package managers are not auto-merged, which can cause issues.
*.lock merge=union

# Ignore diff for certain large files that don't benefit from line-by-line diffing
*.sql -diff
*.bin -diff

# Handling special cases for large text files (disable text normalization for these)
*.log -text

# Handle line ending normalization across different platforms
# Forcing LF in the repository for consistency
* text=auto eol=lf
